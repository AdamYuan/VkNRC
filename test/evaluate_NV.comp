#version 460

#define WEIGHTS_BINDING 0
#define WORKGROUP_SIZE 128
#include "NN_nv.glsl"

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 1) readonly buffer uuInputs { uvec4 uInputs[]; };
layout(std430, binding = 2) writeonly buffer uuOutputs { uvec2 uOutputs[]; };

void main() {
	fcoopmatNV<16, gl_ScopeSubgroup, 16, 16> act_coopmats[2][COOPMAT_X][SUBGROUP_ACT_COOPMAT_Y];
	NNLoadInput(uvec4[8](uInputs[(gl_GlobalInvocationID.x << 3) | 0], uInputs[(gl_GlobalInvocationID.x << 3) | 1],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 2], uInputs[(gl_GlobalInvocationID.x << 3) | 3],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 4], uInputs[(gl_GlobalInvocationID.x << 3) | 5],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 6], uInputs[(gl_GlobalInvocationID.x << 3) | 7]),
	            act_coopmats[0]);
	NNForward64ReLU(0, act_coopmats[0], act_coopmats[1]);
	NNForward64ReLU(1, act_coopmats[1], act_coopmats[0]);
	NNForward64ReLU(2, act_coopmats[0], act_coopmats[1]);
	NNForward64ReLU(3, act_coopmats[1], act_coopmats[0]);
	NNForward64ReLU(4, act_coopmats[0], act_coopmats[1]);
	NNForward16(5, act_coopmats[1], act_coopmats[0][0]);
	uOutputs[gl_GlobalInvocationID.x] = NNOutputUV2(act_coopmats[0][0]);
}
