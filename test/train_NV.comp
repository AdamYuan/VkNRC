#version 460

#define NN_BACKPROPAGATION
#define WEIGHTS_BINDING 0
#define DWEIGHTS_BINDING 1
#define WORKGROUP_SIZE 128
#include "NN_nv.glsl"

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

struct F16Vec3 {
	float16_t x, y, z;
};

layout(std430, binding = 2) readonly buffer uuInputs { uvec4 uInputs[]; };
layout(std430, binding = 3) readonly buffer uuTargets { F16Vec3 uTargets[]; };

void main() {
	fcoopmatNV<16, gl_ScopeSubgroup, 16, 16> act_coopmats[6][COOPMAT_X][SUBGROUP_ACT_COOPMAT_Y],
	    out_coopmats[SUBGROUP_ACT_COOPMAT_Y];
	NNLoadInput(uvec4[8](uInputs[(gl_GlobalInvocationID.x << 3) | 0], uInputs[(gl_GlobalInvocationID.x << 3) | 1],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 2], uInputs[(gl_GlobalInvocationID.x << 3) | 3],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 4], uInputs[(gl_GlobalInvocationID.x << 3) | 5],
	                     uInputs[(gl_GlobalInvocationID.x << 3) | 6], uInputs[(gl_GlobalInvocationID.x << 3) | 7]),
	            act_coopmats[0]);
	NNForward64_ReLU(0, act_coopmats[0], act_coopmats[1]);
	NNForward64_ReLU(1, act_coopmats[1], act_coopmats[2]);
	NNForward64_ReLU(2, act_coopmats[2], act_coopmats[3]);
	NNForward64_ReLU(3, act_coopmats[3], act_coopmats[4]);
	NNForward64_ReLU(4, act_coopmats[4], act_coopmats[5]);
	NNForward3(5, act_coopmats[5], out_coopmats);
	vec3 predict = NNOutput3(out_coopmats);
	F16Vec3 target = uTargets[gl_GlobalInvocationID.x];
	NNLoadDA3_L2Loss(predict, vec3(f16vec3(target.x, target.y, target.z)), out_coopmats);
	NNUpdateDW3(5, out_coopmats, act_coopmats[5]);
	NNBackwardDA3_ReLU(5, out_coopmats, act_coopmats[5]);
	NNUpdateDW64(4, act_coopmats[5], act_coopmats[4]);
	NNBackwardDA64_ReLU(4, act_coopmats[5], act_coopmats[4]);
	NNUpdateDW64(3, act_coopmats[4], act_coopmats[3]);
	NNBackwardDA64_ReLU(3, act_coopmats[4], act_coopmats[3]);
	NNUpdateDW64(2, act_coopmats[3], act_coopmats[2]);
	NNBackwardDA64_ReLU(2, act_coopmats[3], act_coopmats[2]);
	NNUpdateDW64(1, act_coopmats[2], act_coopmats[1]);
	NNBackwardDA64_ReLU(1, act_coopmats[2], act_coopmats[1]);
	NNUpdateDW64(0, act_coopmats[1], act_coopmats[0]);
}
