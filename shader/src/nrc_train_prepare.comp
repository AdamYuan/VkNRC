#version 450
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

#include "Constant.glsl"

struct VkDispatchIndirectCommand {
	uint x, y, z;
};
layout(binding = 0) buffer uuCount { uint uCount; };
layout(std430, binding = 1) writeonly buffer uuCommand { VkDispatchIndirectCommand uCommand; };
layout(std430, binding = 2) buffer uuAdamState {
	uint uStep;
	float uBeta1_T, uBeta2_T;
};

void main() {
	uint count = uCount;
	count = min(count, NRC_TRAIN_BATCH_SIZE);
	uCount = count;

	uCommand = VkDispatchIndirectCommand((count + 127) / 128, 1, 1);
	if (count > 0) {
		++uStep;
		uBeta1_T *= ADAM_BETA1;
		uBeta2_T *= ADAM_BETA2;
	}
}
